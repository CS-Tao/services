version: '3.1'

services:
  # whu-library-seat (3 services)
  seat-db:
    image: mysql:8.0.17
    container_name: seat-db
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
    restart: always
    environment:
      TIME_ZONE: ${TIME_ZONE}
      MYSQL_DATABASE: seat-records
      MYSQL_USER: whu-lib
      MYSQL_PASSWORD: Ab12345678..c
      MYSQL_ROOT_PASSWORD: ${SEAT_DB_ROOT_PASSWD}
    volumes:
      - seat-db-v:/var/lib/mysql/
      - ./whu-library-seat/db_init_scripts/:/docker-entrypoint-initdb.d/
    networks:
      - seat-network
  seat-recorder:
    image: docker.pkg.github.com/cs-tao/whu-library-seat-docker/seat-records:1.0.1
    container_name: seat-recorder
    environment:
      TIME_ZONE: ${TIME_ZONE}
      DATABASE_HOST: seat-db
    restart: always
    depends_on:
      - seat-db
    networks:
      - seat-network
  seat-ghauth:
    image: docker.pkg.github.com/cs-tao/whu-library-seat-docker/seat-ghauth:1.1.0
    container_name: seat-ghauth
    environment:
      TIME_ZONE: ${TIME_ZONE}
      WHU_SEAT_CLIENT_SCERET: ${SEAT_GHAUTH_CLIENT_SCERET}
    restart: always
    networks:
      - seat-network

  # portainer
  portainer:
    image: portainer/portainer
    container_name: portainer
    command: --admin-password '${PORTAINER_ADMIN_PASSWD_HASHED}'
    environment:
      TIME_ZONE: ${TIME_ZONE}
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-v:/data
    networks:
      - portainer-network

  # gallery
  gallery:
    image: alterway/docker-image-gallery
    container_name: gallery
    environment:
      TIME_ZONE: ${TIME_ZONE}
      GALLERY_TITLE: My Gallery
    restart: always
    volumes:
      - ./gallery/view/:/fgallery/view:ro
      - ./gallery/images/:/images/:ro
    networks:
      - gallery-network

  # global nginx
  nginx:
    image: nginx:latest
    container_name: global-nginx
    environment:
      - TIME_ZONE=${TIME_ZONE}
    restart: always
    ports:
      - ${NGINX_SSL_PORT}:443
    volumes:
      - ./nginx/ssl/:/etc/nginx/ssl/:ro
      - ./nginx/conf.d/:/etc/nginx/conf.d/:ro
      - ./nginx/assets/:/home/nginx/assets/
      - ./nginx/logs/:/var/log/nginx/
    depends_on:
      - seat-recorder
      - seat-ghauth
      - portainer
      - gallery
    networks:
      - seat-network
      - ssr-network
      - portainer-network
      - gallery-network

  # ssr (1 service)
  ssr:
    image: docker.pkg.github.com/gis-hacker/ssr-docker/ssr-docker:master
    container_name: ssr
    restart: always
    environment:
      - TIME_ZONE=${TIME_ZONE}
      - PASSWORD=${SSR_PASSWD}
      - PROTOCOL_PARAM=${SSR_PROTOCOL_PARAM}
      - REDIRECT=nginx:80
    volumes:
      - ./ssr/config.tmpl:/app/config.tmpl:ro
    ports:
      - ${SSR_PORT}:80
    depends_on:
      - nginx
    networks:
      - ssr-network

volumes:
  seat-db-v:
  portainer-v:

networks:
  seat-network:
  ssr-network:
  portainer-network:
  gallery-network:
