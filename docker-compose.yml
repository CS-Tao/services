version: '3.5'

services:
  # seat (3 services)
  seat-db:
    image: mysql:8.0.17
    container_name: seat-db
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
    restart: always
    environment:
      TIME_ZONE: ${TIME_ZONE}
      MYSQL_DATABASE: seat-records
      MYSQL_USER: whu-lib
      MYSQL_PASSWORD: Ab12345678..c
      MYSQL_ROOT_PASSWORD: ${SEAT_DB_ROOT_PASSWD}
    volumes:
      - seat-db-v:/var/lib/mysql/
      - ./seat/db_init_scripts/:/docker-entrypoint-initdb.d/
    networks:
      - seat-network
  seat-recorder:
    image: cstao/seat-records:1.0.1
    container_name: seat-recorder
    environment:
      TIME_ZONE: ${TIME_ZONE}
      DATABASE_HOST: seat-db
    restart: always
    depends_on:
      - seat-db
    networks:
      - seat-network
  seat-ghauth:
    image: cstao/seat-ghauth:1.1.0
    container_name: seat-ghauth
    environment:
      TIME_ZONE: ${TIME_ZONE}
      WHU_SEAT_CLIENT_SCERET: ${SEAT_GHAUTH_CLIENT_SCERET}
    restart: always
    networks:
      - seat-network

  # portainer
  portainer:
    image: portainer/portainer
    container_name: portainer
    command: --admin-password '${PORTAINER_ADMIN_PASSWD_HASHED}'
    environment:
      TIME_ZONE: ${TIME_ZONE}
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-v:/data
    networks:
      - portainer-network

  # gallery
  gallery:
    image: alterway/docker-image-gallery
    container_name: gallery
    environment:
      TIME_ZONE: ${TIME_ZONE}
      GALLERY_TITLE: My Gallery
    restart: always
    volumes:
      - ./gallery/rewrite/index.html:/fgallery/view/index.html:ro
      - ./gallery/rewrite/favicon.png:/fgallery/view/favicon.png:ro
      - ./gallery/images/:/images/:ro
    networks:
      - gallery-network

  # v2ray (2 services)
  v2ray:
    image: cstao/docker-v2ray:latest
    container_name: v2ray
    environment:
      TIME_ZONE: ${TIME_ZONE}
      CLIENTS_IDS: ${V2RAY_CLIENTS_IDS}
      CLIENTS_LEVELS: ${V2RAY_CLIENTS_LEVELS}
      CLIENTS_ALTERIDS: ${V2RAY_CLIENTS_ALTERIDS}
      CLIENTS_EMAILS: ${V2RAY_CLIENTS_EMAILS}
    command: ["bash", "-c", "/etc/v2ray/start.sh"]
    restart: always
    volumes:
      - ./v2ray/config.tmpl:/etc/v2ray/config.tmpl:ro
      - ./v2ray/start.sh:/etc/v2ray/start.sh
      - ./v2ray/logs/:/var/log/v2ray/
      - ./v2ray/info/:/var/v2ray/info/
    networks:
      - v2ray-network
  v2ray-info:
    image: nikolaik/python-nodejs:python3.7-nodejs13-alpine
    container_name: v2ray-info
    command: ["sh", "-c", "/var/v2ray/info/start.sh"]
    environment:
      TIME_ZONE: ${TIME_ZONE}
      PORT: ${CADDY_SSL_PORT}
      ADDRESS: world.cs-tao.cc
      PS: Virmach
    volumes:
      - ./v2ray/info/:/var/v2ray/info/
    depends_on:
      - v2ray

  # caddy
  caddy:
    image: abiosoft/caddy
    container_name: caddy
    environment:
      - TIME_ZONE=${TIME_ZONE}
      - ACME_AGREE=true
    restart: always
    ports:
      - ${CADDY_PORT}:80
      - ${CADDY_SSL_PORT}:443
    volumes:
      - ./caddy/Caddyfile:/etc/Caddyfile:ro
      - ./caddy/caddyfile.d/:/etc/caddyfile.d/:ro
      - ./caddy/ssl/:/root/.caddy/
      - ./caddy/www/:/srv/:ro
      - ./caddy/logs/:/var/logs/
    depends_on:
      - seat-recorder
      - seat-ghauth
      - portainer
      - gallery
      - v2ray
    networks:
      - seat-network
      - portainer-network
      - gallery-network
      - v2ray-network

volumes:
  seat-db-v:
    name: seat-db-data
  portainer-v:
    name: portainer-data

networks:
  seat-network:
    name: seat-network
  v2ray-network:
    name: v2ray-network
  portainer-network:
    name: portainer-network
  gallery-network:
    name: gallery-network
